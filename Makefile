# Makefile –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è TeleBlast
# –ò—Å–ø–æ–ª—å–∑—É–π: make <–∫–æ–º–∞–Ω–¥–∞>

.PHONY: help start-bot stop-bot restart-bot start-webapp stop-webapp restart-webapp status logs clean install setup create-venv force-stop kill-safe kill-teleblast cleanup-pids

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

# –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR := /home/teleblast
BOT_PIDFILE := $(PROJECT_DIR)/bot.pid
WEBAPP_PIDFILE := $(PROJECT_DIR)/webapp.pid

# –ü–æ–º–æ—â—å (–∫–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
help:
	@echo "$(GREEN)ü§ñ TeleBlast - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo ""
	@echo "$(YELLOW)üì± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º:$(NC)"
	@echo "  make start-bot     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ"
	@echo "  make stop-bot      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
	@echo "  make restart-bot   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
	@echo ""
	@echo "$(YELLOW)üåê –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ–±-–ø–∞–Ω–µ–ª—å—é:$(NC)"
	@echo "  make start-webapp  - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
	@echo "  make stop-webapp   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
	@echo "  make restart-webapp- –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
	@echo ""
	@echo "$(YELLOW)üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:$(NC)"
	@echo "  make status        - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
	@echo "  make logs          - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
	@echo "  make logs-webapp   - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo ""
	@echo "$(YELLOW)üîß –£—Ç–∏–ª–∏—Ç—ã:$(NC)"
	@echo "  make install       - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  make setup         - –ü–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make create-venv   - –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  make clean         - –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"
	@echo "  make stop-all      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
	@echo "  make force-stop    - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  make kill-safe     - –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ bot.py –∏ app.py"
	@echo "  make kill-teleblast   - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã TeleBlast –≤ $(PROJECT_DIR)"
	@echo "  make cleanup-pids  - –û—á–∏—Å—Ç–∏—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ pidfiles"
	@echo "  make start-all     - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤–µ–±-–ø–∞–Ω–µ–ª—å"

# === –£–ü–†–ê–í–õ–ï–ù–ò–ï –ë–û–¢–û–ú ===

start-bot:
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...$(NC)"
	@if [ -f "$(BOT_PIDFILE)" ]; then \
		pid=$$(cat $(BOT_PIDFILE) 2>/dev/null || echo ""); \
		if [ -n "$$pid" ] && kill -0 $$pid 2>/dev/null; then \
			echo "$(YELLOW)‚ö†Ô∏è  –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω! PID: $$pid$(NC)"; \
			exit 0; \
		else \
			echo "$(YELLOW)üßπ –£–¥–∞–ª—è—é —É—Å—Ç–∞—Ä–µ–≤—à–∏–π pidfile$(NC)"; \
			rm -f $(BOT_PIDFILE); \
		fi; \
	fi; \
	nohup python3 bot.py > bot.log 2>&1 & \
	bot_pid=$$!; \
	echo $$bot_pid > $(BOT_PIDFILE); \
	echo "$(GREEN)‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! PID: $$bot_pid$(NC)"; \
	echo "$(YELLOW)üìÑ –õ–æ–≥–∏: tail -f bot.log$(NC)"

stop-bot:
	@echo "$(RED)‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...$(NC)"
	@if [ -f "$(BOT_PIDFILE)" ]; then \
		pid=$$(cat $(BOT_PIDFILE) 2>/dev/null || echo ""); \
		if [ -n "$$pid" ] && kill -0 $$pid 2>/dev/null; then \
			echo "  üîç –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ PID: $$pid"; \
			kill -TERM $$pid 2>/dev/null || true; \
			sleep 2; \
			if kill -0 $$pid 2>/dev/null; then \
				echo "  üîç –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PID: $$pid"; \
				kill -KILL $$pid 2>/dev/null || true; \
			fi; \
			rm -f $(BOT_PIDFILE); \
			echo "$(GREEN)‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
		else \
			echo "$(YELLOW)‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–¥–∞–ª—è—é pidfile$(NC)"; \
			rm -f $(BOT_PIDFILE); \
		fi; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω (pidfile –Ω–µ –Ω–∞–π–¥–µ–Ω)$(NC)"; \
	fi

restart-bot: stop-bot
	@sleep 2
	@$(MAKE) start-bot

# === –£–ü–†–ê–í–õ–ï–ù–ò–ï –í–ï–ë-–ü–†–ò–õ–û–ñ–ï–ù–ò–ï–ú ===

start-webapp:
	@echo "$(GREEN)üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...$(NC)"
	@python3 start_webapp.py

stop-webapp:
	@echo "$(RED)‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...$(NC)"
	@webapp_stopped="no"; \
	for pid in $$(pgrep -f "python.*app.py" 2>/dev/null || true); do \
		if [ -n "$$pid" ] && [ "$$pid" -gt 0 ]; then \
			cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
			if [ "$$cwd" = "$(PROJECT_DIR)" ] || [ "$$cwd" = "$(PROJECT_DIR)/webapp" ]; then \
				echo "  üîç –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ PID $$pid"; \
				kill -TERM $$pid 2>/dev/null || true; \
				sleep 1; \
				kill -KILL $$pid 2>/dev/null || true; \
				webapp_stopped="yes"; \
			fi; \
		fi; \
	done; \
	for pid in $$(pgrep -f "uvicorn.*app:app" 2>/dev/null || true); do \
		if [ -n "$$pid" ] && [ "$$pid" -gt 0 ]; then \
			cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
			if [ "$$cwd" = "$(PROJECT_DIR)" ] || [ "$$cwd" = "$(PROJECT_DIR)/webapp" ]; then \
				echo "  üîç –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º uvicorn PID $$pid"; \
				kill -TERM $$pid 2>/dev/null || true; \
				sleep 1; \
				kill -KILL $$pid 2>/dev/null || true; \
				webapp_stopped="yes"; \
			fi; \
		fi; \
	done; \
	if [ "$$webapp_stopped" = "yes" ]; then \
		echo "$(GREEN)‚úÖ –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ $(PROJECT_DIR)$(NC)"; \
	fi

restart-webapp: stop-webapp
	@sleep 2
	@$(MAKE) start-webapp

# === –ú–ê–°–°–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò ===

start-all:
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã...$(NC)"
	@$(MAKE) start-bot
	@sleep 1
	@echo "$(GREEN)üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø–∞–Ω–µ–ª–∏ (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)...$(NC)"
	@$(MAKE) start-webapp

stop-all:
	@echo "$(RED)‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...$(NC)"
	@$(MAKE) stop-bot
	@$(MAKE) stop-webapp

restart-all: stop-all
	@sleep 2
	@$(MAKE) start-all

# === –ú–û–ù–ò–¢–û–†–ò–ù–ì ===

status:
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ $(PROJECT_DIR):$(NC)"
	@echo ""
	@if [ -f "$(BOT_PIDFILE)" ]; then \
		pid=$$(cat $(BOT_PIDFILE) 2>/dev/null || echo ""); \
		if [ -n "$$pid" ] && kill -0 $$pid 2>/dev/null; then \
			echo "$(GREEN)ü§ñ –ë–æ—Ç: ‚úÖ –ó–∞–ø—É—â–µ–Ω (PID: $$pid)$(NC)"; \
		else \
			echo "$(RED)ü§ñ –ë–æ—Ç: ‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π pidfile)$(NC)"; \
		fi; \
	else \
		echo "$(RED)ü§ñ –ë–æ—Ç: ‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi
	@webapp_pids=""; \
	webapp_count=0; \
	for pid in $$(pgrep -f "python.*app.py" 2>/dev/null || true); do \
		cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
		if [ "$$cwd" = "$(PROJECT_DIR)" ] || [ "$$cwd" = "$(PROJECT_DIR)/webapp" ]; then \
			webapp_pids="$$webapp_pids $$pid"; \
			webapp_count=$$((webapp_count + 1)); \
		fi; \
	done; \
	uvicorn_pids=""; \
	uvicorn_count=0; \
	for pid in $$(pgrep -f "uvicorn.*app:app" 2>/dev/null || true); do \
		cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
		if [ "$$cwd" = "$(PROJECT_DIR)" ] || [ "$$cwd" = "$(PROJECT_DIR)/webapp" ]; then \
			uvicorn_pids="$$uvicorn_pids $$pid"; \
			uvicorn_count=$$((uvicorn_count + 1)); \
		fi; \
	done; \
	if [ "$$webapp_count" -gt 0 ]; then \
		if [ "$$webapp_count" -eq 1 ]; then \
			echo "$(GREEN)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚úÖ –ó–∞–ø—É—â–µ–Ω–∞ (PID:$$webapp_pids)$(NC)"; \
		else \
			echo "$(RED)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚ö†Ô∏è  –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö! ($$webapp_count —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤:$$webapp_pids)$(NC)"; \
		fi \
	elif [ "$$uvicorn_count" -gt 0 ]; then \
		if [ "$$uvicorn_count" -eq 1 ]; then \
			echo "$(GREEN)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚úÖ –ó–∞–ø—É—â–µ–Ω–∞ uvicorn (PID:$$uvicorn_pids)$(NC)"; \
		else \
			echo "$(RED)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚ö†Ô∏è  –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ô uvicorn! ($$uvicorn_count —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤:$$uvicorn_pids)$(NC)"; \
		fi \
	elif lsof -ti:8000 > /dev/null 2>&1; then \
		echo "$(YELLOW)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚ö†Ô∏è  –ü–æ—Ä—Ç 8000 –∑–∞–Ω—è—Ç (PID: $$(lsof -ti:8000))$(NC)"; \
	else \
		echo "$(RED)üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: ‚ùå –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"; \
	fi
	@echo ""
	@echo "$(YELLOW)üìÅ –§–∞–π–ª—ã –ª–æ–≥–æ–≤:$(NC)"
	@if [ -f bot.log ]; then echo "  üìÑ bot.log ($$(wc -l < bot.log) —Å—Ç—Ä–æ–∫)"; fi
	@if [ -f webapp.log ]; then echo "  üìÑ webapp.log ($$(wc -l < webapp.log) —Å—Ç—Ä–æ–∫)"; fi

cleanup-pids:
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö pidfiles...$(NC)"
	@if [ -f "$(BOT_PIDFILE)" ]; then \
		pid=$$(cat $(BOT_PIDFILE) 2>/dev/null || echo ""); \
		if [ -n "$$pid" ] && kill -0 $$pid 2>/dev/null; then \
			echo "  ‚ÑπÔ∏è  bot.pid —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å $$pid"; \
		else \
			rm -f $(BOT_PIDFILE); \
			echo "  üóëÔ∏è  –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π bot.pid"; \
		fi; \
	else \
		echo "  ‚ÑπÔ∏è  bot.pid –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
	fi
	@if [ -f "$(WEBAPP_PIDFILE)" ]; then \
		pid=$$(cat $(WEBAPP_PIDFILE) 2>/dev/null || echo ""); \
		if [ -n "$$pid" ] && kill -0 $$pid 2>/dev/null; then \
			echo "  ‚ÑπÔ∏è  webapp.pid —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å $$pid"; \
		else \
			rm -f $(WEBAPP_PIDFILE); \
			echo "  üóëÔ∏è  –£–¥–∞–ª–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π webapp.pid"; \
		fi; \
	else \
		echo "  ‚ÑπÔ∏è  webapp.pid –Ω–µ –Ω–∞–π–¥–µ–Ω"; \
	fi
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

logs:
	@echo "$(GREEN)üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ –±–æ—Ç–∞:$(NC)"
	@if [ -f bot.log ]; then \
		tail -50 bot.log; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –§–∞–π–ª bot.log –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

logs-webapp:
	@echo "$(GREEN)üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:$(NC)"
	@if [ -f webapp.log ]; then \
		tail -50 webapp.log; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –§–∞–π–ª webapp.log –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)"; \
	fi

logs-live:
	@echo "$(GREEN)üìÑ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ª–æ–≥–æ–≤ –±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):$(NC)"
	@tail -f bot.log

# === –£–¢–ò–õ–ò–¢–´ ===

install:
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	@pip install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

setup:
	@echo "$(GREEN)üîß –ü–µ—Ä–≤–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	@if [ ! -f .env ]; then \
		cp env.example .env && echo "$(GREEN)‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª –∏–∑ –ø—Ä–∏–º–µ—Ä–∞$(NC)"; \
		echo "$(YELLOW)‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env!$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç$(NC)"; \
	fi
	@$(MAKE) create-venv
	@$(MAKE) install
	@echo "$(GREEN)‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:$(NC)"
	@echo "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª"
	@echo "  2. source venv/bin/activate"
	@echo "  3. make start-bot"
	@echo "  4. make start-webapp"

create-venv:
	@echo "$(GREEN)üêç –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...$(NC)"
	@if [ ! -d venv ]; then \
		python3 -m venv venv && echo "$(GREEN)‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ$(NC)"; \
		echo "$(YELLOW)üí° –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ: source venv/bin/activate$(NC)"; \
	else \
		echo "$(YELLOW)‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç$(NC)"; \
	fi

force-stop:
	@echo "$(RED)üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è  –ü–æ–∏—Å–∫ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...$(NC)"
	@bot_pids=$$(pgrep -f "python.*bot.py" 2>/dev/null || true); \
	if [ -n "$$bot_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ –±–æ—Ç–æ–≤: $$bot_pids"; \
		for pid in $$bot_pids; do \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@webapp_pids=$$(pgrep -f "python.*app.py" 2>/dev/null || true); \
	if [ -n "$$webapp_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: $$webapp_pids"; \
		for pid in $$webapp_pids; do \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@uvicorn_pids=$$(pgrep -f "uvicorn" 2>/dev/null || true); \
	if [ -n "$$uvicorn_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ uvicorn: $$uvicorn_pids"; \
		for pid in $$uvicorn_pids; do \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã uvicorn –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã uvicorn –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@echo "$(YELLOW)‚ö†Ô∏è  –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...$(NC)"
	@other_pids=$$(pgrep -f "start_webapp.py\|remake-bot" 2>/dev/null || true); \
	if [ -n "$$other_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $$other_pids"; \
		for pid in $$other_pids; do \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –°–≤—è–∑–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@sleep 2
	@echo "$(GREEN)‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
	@echo "$(YELLOW)üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...$(NC)"
	@$(MAKE) status

kill-safe:
	@echo "$(YELLOW)üõ°Ô∏è  –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ bot.py –∏ app.py...$(NC)"
	@echo "$(YELLOW)‚ö†Ô∏è  –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ bot.py...$(NC)"
	@bot_pids=$$(ps aux | grep "[p]ython.*bot\.py" | awk '{print $$2}' || true); \
	if [ -n "$$bot_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ bot.py –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $$bot_pids"; \
		for pid in $$bot_pids; do \
			echo "    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PID $$pid..."; \
			kill -15 $$pid 2>/dev/null || true; \
			sleep 1; \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –í—Å–µ bot.py –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@echo "$(YELLOW)‚ö†Ô∏è  –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ app.py...$(NC)"
	@app_pids=$$(ps aux | grep "[p]ython.*app\.py" | awk '{print $$2}' || true); \
	if [ -n "$$app_pids" ]; then \
		echo "  üîç –ù–∞–π–¥–µ–Ω–æ app.py –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $$app_pids"; \
		for pid in $$app_pids; do \
			echo "    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PID $$pid..."; \
			kill -15 $$pid 2>/dev/null || true; \
			sleep 1; \
			kill -9 $$pid 2>/dev/null || true; \
		done; \
		echo "  ‚úÖ –í—Å–µ app.py –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	else \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å—ã app.py –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"; \
	fi
	@sleep 1
	@echo "$(GREEN)‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"
	@$(MAKE) status

kill-teleblast:
	@echo "$(RED)üö® –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ TeleBlast (cwd=$(PROJECT_DIR))...$(NC)"
	@found="no"; \
	for pid in $$(pgrep -f "python.*bot.py" 2>/dev/null || true); do \
		if [ -n "$$pid" ] && [ "$$pid" -gt 0 ]; then \
			cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
			if [ "$$cwd" = "$(PROJECT_DIR)" ]; then \
				found="yes"; \
				echo "  üîç PID $$pid (–±–æ—Ç, cwd=$$cwd) ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é"; \
				kill -TERM $$pid 2>/dev/null || true; \
				sleep 1; \
				kill -KILL $$pid 2>/dev/null || true; \
			fi; \
		fi; \
	done; \
	for pid in $$(pgrep -f "python.*app.py" 2>/dev/null || true); do \
		if [ -n "$$pid" ] && [ "$$pid" -gt 0 ]; then \
			cwd=$$(readlink -f /proc/$$pid/cwd 2>/dev/null || echo ""); \
			if [ "$$cwd" = "$(PROJECT_DIR)" ] || [ "$$cwd" = "$(PROJECT_DIR)/webapp" ]; then \
				found="yes"; \
				echo "  üîç PID $$pid (–≤–µ–±-–ø–∞–Ω–µ–ª—å, cwd=$$cwd) ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é"; \
				kill -TERM $$pid 2>/dev/null || true; \
				sleep 1; \
				kill -KILL $$pid 2>/dev/null || true; \
			fi; \
		fi; \
	done; \
	if [ "$$found" = "no" ]; then \
		echo "  ‚ÑπÔ∏è  –ü—Ä–æ—Ü–µ—Å—Å–æ–≤ TeleBlast –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"; \
	else \
		echo "  ‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã TeleBlast –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"; \
	fi
	@$(MAKE) status

clean:
	@echo "$(YELLOW)üßπ –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ –∏ pidfiles...$(NC)"
	@if [ -f bot.log ]; then > bot.log && echo "$(GREEN)‚úÖ bot.log –æ—á–∏—â–µ–Ω$(NC)"; fi
	@if [ -f webapp.log ]; then > webapp.log && echo "$(GREEN)‚úÖ webapp.log –æ—á–∏—â–µ–Ω$(NC)"; fi
	@rm -f $(BOT_PIDFILE) $(WEBAPP_PIDFILE) && echo "$(GREEN)‚úÖ pidfiles —É–¥–∞–ª–µ–Ω—ã$(NC)" || true
	@find . -name "*.pyc" -delete
	@find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# === –†–ê–ó–†–ê–ë–û–¢–ö–ê ===

dev-bot:
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@python3 bot.py

dev-webapp:
	@echo "$(GREEN)üîß –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	@cd webapp && python3 app.py 